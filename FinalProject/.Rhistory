spss_file <- file.path('https://github.com/zachalexander/data607_cunysps/blob/master/FinalProject/PRRI-2017-American-Values-Survey.sav?raw=true')
avs <- read_sav(spss_file)
kable(head(avs, n = 15L), align = rep('c', 5)) %>%
kable_styling(bootstrap_options = c("striped", "responsive", "condensed"), full_width = FALSE) %>%
kableExtra::scroll_box(width = "100%", height = "500px")
library(dplyr)
Trump_sub<- election_data[,c(2,5,6,7)]
Trump_sub$total16 <- Trump_sub$trump16 + Trump_sub$clinton16 + Trump_sub$otherpres16
Trump_map <- Trump_sub %>% group_by(state) %>% summarise_all(sum)
Trump_map$trump_per <- Trump_map$trump16/Trump_map$total16
library(tidyverse)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rgeos)
library(maps)
library(RColorBrewer)
library(tools)
world <- ne_countries(scale = "medium", returnclass = "sf")
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
states$ID <- toTitleCase(states$ID)
USA_votes <- Trump_map[which(Trump_map$state != "Alaska" & Trump_map$state != "Hawaii"),]
states$trump_per <- USA_votes$trump_per
for(i in 1:length(states$trump_per)){
if(states$trump_per[i]-0.5>0.05){
states$color[i] <- "1 - Greater than 55% voted for Trump"
}
if(states$trump_per[i]-0.5< 0.05 & states$trump_per[i]- 0.5 >0){
states$color[i] <- "2 - Between 50% and 55% voted for Trump"
}
if(states$trump_per[i]-0.5> (-0.05) & states$trump_per[i]-0.5<0){
states$color[i] <- "3 - Between 45 and 50% voted for Trump"
}
if(states$trump_per[i]-0.5< (-0.05)){
states$color[i] <- "4 - Less than 45% voted for Trump"
}
}
ggplot(data = states) +
ggtitle("Percentage of Trump Votes Delta from 50%") +
geom_sf(aes(fill = states$trump_per-0.5)) +
scale_fill_distiller(palette ="RdBu", limits = c(-0.5,0.5)) +
labs(fill = "Percentage") +
coord_sf(xlim = c(-125,-65), ylim = c(25,50), expand = FALSE) +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "right",
legend.direction = "vertical",
legend.justification = "center",
axis.text.x = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
mycols <- c("#CF0F0F", "#CF9594", "#95A7C2", "#30659B")
ggplot(data = states) +
ggtitle("2016 Election - Percentage of Votes for Trump By State") +
geom_sf(aes(fill = states$color)) +
scale_fill_manual(values = mycols) +
coord_sf(xlim = c(-125,-65), ylim = c(25,50), expand = FALSE) +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "vertical",
legend.justification = "center",
legend.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
question_list <- c("q17a", "q17b", "q17c", "q17d", "q17e", "q17f", "q17g", "q17h")
df_list <- c("Temp_df_a", "Temp_df_b", "Temp_df_c", "Temp_df_d", "Temp_df_e", "Temp_df_f", "Temp_df_g", "Temp_df_h")
q_num <- c(90,92,91,93,94,95,96,97)
for(i in 1:length(q_num)){
assign(df_list[i], avs[which(avs[[paste(question_list[i])]]< 5), c(4, q_num[i])])
}
# Temp_df_a<- avs[which(avs$q17a <5),c(4,90)]
# Temp_df_b<- avs[which(avs$q17b <5),c(4,92)]
# Temp_df_c<- avs[which(avs$q17c <5),c(4,91)]
# Temp_df_d<- avs[which(avs$q17d <5),c(4,93)]
# Temp_df_e<- avs[which(avs$q17e <5),c(4,94)]
# Temp_df_f<- avs[which(avs$q17f <5),c(4,95)]
# Temp_df_g<- avs[which(avs$q17g <5),c(4,96)]
# Temp_df_h<- avs[which(avs$q17h <5),c(4,97)]
df_state_list <- c("state_q17a", "state_q17b", "state_q17c", "state_q17d", "state_q17e", "state_q17f", "state_q17g", "state_q17h")
dfs <- list(Temp_df_a, Temp_df_b, Temp_df_c, Temp_df_d, Temp_df_e, Temp_df_f, Temp_df_g, Temp_df_h)
grouped_data <- lapply(dfs, function(x){ x %>% group_by(state) %>% summarise_all(mean)})
for(i in 1:length(grouped_data)){
assign(df_state_list[i], as.data.frame(grouped_data[[i]]))
}
# state_q17a <- Temp_df_a %>% group_by(state) %>% summarise_all(mean)
# state_q17b <- Temp_df_b %>% group_by(state) %>% summarise_all(mean)
# state_q17c_test <- Temp_df_c %>% group_by(state) %>% summarise_all(mean)
# state_q17d <- Temp_df_d %>% group_by(state) %>% summarise_all(mean)
# state_q17e <- Temp_df_e %>% group_by(state) %>% summarise_all(mean)
# state_q17f <- Temp_df_f %>% group_by(state) %>% summarise_all(mean)
# state_q17g <- Temp_df_g %>% group_by(state) %>% summarise_all(mean)
# state_q17h <- Temp_df_h %>% group_by(state) %>% summarise_all(mean)
library(openintro)
q17_df <- Reduce(function(x, y) merge(x, y, all=TRUE), list(state_q17a, state_q17b, state_q17c, state_q17d, state_q17e, state_q17f, state_q17g, state_q17h))
q17_df <- q17_df[which(q17_df$state != "HI" & q17_df$state != "AK"),]
q17_df$state <- abbr2state(q17_df$state)
names(q17_df) <- c("ID", "q17a", "q17b", "q17c", "q17d", "q17e", "q17f", "q17g", "q17h")
states <- merge(states,q17_df,by="ID")
state_map <- ggplot(data = states) +
theme(
plot.title = element_text(hjust = 0.5)
)
state_map +
ggtitle("Allowing gay and lesbian couples to marry legally") +
geom_sf(aes(fill = -(states$q17a-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Allow business owner to refuse products/services to gay/lesbian people") +
geom_sf(aes(fill = -(states$q17b-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Laws protecting LGBTQ in jobs, housing, etc.") +
geom_sf(aes(fill = -(states$q17c-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Build the Wall") +
geom_sf(aes(fill = -(states$q17d-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Muslim Ban") +
geom_sf(aes(fill = -(states$q17e-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("DACA through army or college") +
geom_sf(aes(fill = -(states$q17f-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Prevent refugees from entering USA") +
geom_sf(aes(fill = -(states$q17g-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Withdraw from Iran nuclear deal") +
geom_sf(aes(fill = -(states$q17h-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
# Temp_df_a<- avs[which(avs$q17a < 5),c(4,104)]
# Temp_df_b<- avs[which(avs$q17b < 5),c(4,105)]
# Temp_df_c<- avs[which(avs$q17c < 5),c(4,106)]
# Temp_df_d<- avs[which(avs$q17d < 5),c(4,107)]
# Temp_df_e<- avs[which(avs$q17e < 5),c(4,108)]
# Temp_df_f<- avs[which(avs$q17f < 5),c(4,109)]
# Temp_df_g<- avs[which(avs$q17g < 5),c(4,110)]
# Temp_df <- avs[which(avs$q24 < 3),c(4,112)]
# Temp_df2 <- avs[which(avs$q25 < 3),c(4,114)]
df_list_2 <- c("Temp_df_i", "Temp_df_j", "Temp_df_k", "Temp_df_l", "Temp_df_m", "Temp_df_n", "Temp_df_o")
q_num <- c(104,105,106,107,108,109,110)
for(i in 1:length(q_num)){
assign(df_list_2[i], avs[which(avs[[paste(question_list[i])]]< 5), c(4, q_num[i])])
}
question_list <- c("q24", "q25")
df_list_3 <- c("Temp_df_p", "Temp_df_q")
q_num <- c(112,114)
for(i in 1:length(q_num)){
assign(df_list_3[i], avs[which(avs[[paste(question_list[i])]]< 3), c(4, q_num[i])])
}
df_state_list <- c("state_q22a", "state_q22b", "state_q22c", "state_q22d", "state_q22e", "state_q22f", "state_q22g", "state_q24", "state_q25")
dfs <- list(Temp_df_j, Temp_df_k, Temp_df_l, Temp_df_m, Temp_df_n, Temp_df_o, Temp_df_p, Temp_df_q)
grouped_data <- lapply(dfs, function(x){ x %>% group_by(state) %>% summarise_all(mean)})
for(i in 1:length(grouped_data)){
assign(df_state_list[i], as.data.frame(grouped_data[[i]]))
}
# state_q22a <- Temp_df_a %>% group_by(state) %>% summarise_all(mean)
# state_q22b <- Temp_df_b %>% group_by(state) %>% summarise_all(mean)
# state_q22c <- Temp_df_c %>% group_by(state) %>% summarise_all(mean)
# state_q22d <- Temp_df_d %>% group_by(state) %>% summarise_all(mean)
# state_q22e <- Temp_df_e %>% group_by(state) %>% summarise_all(mean)
# state_q22f <- Temp_df_f %>% group_by(state) %>% summarise_all(mean)
# state_q22g <- Temp_df_g %>% group_by(state) %>% summarise_all(mean)
# state_q24 <- Temp_df %>% group_by(state) %>% summarise_all(mean)
# state_q25 <- Temp_df2 %>% group_by(state) %>% summarise_all(mean)
View(state_q24)
library(openintro)
q22_df <- Reduce(function(x, y) merge(x, y, all=TRUE), list(state_q22a, state_q22b, state_q22c, state_q22d, state_q22e, state_q22f, state_q22g, state_q24, state_q25))
View(Temp_df_i)
options(width = 1200)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(tidyr)
library(plyr)
library(knitr)
library(kableExtra)
election_data <- read.csv('https://raw.githubusercontent.com/zachalexander/data607_cunysps/master/FinalProject/election_data.csv')
kable(head(election_data, n = 15L), align = rep('c', 5)) %>%
kable_styling(bootstrap_options = c("striped", "responsive", "condensed"), full_width = FALSE) %>%
kableExtra::scroll_box(width = "100%", height = "500px")
library(haven)
spss_file <- file.path('https://github.com/zachalexander/data607_cunysps/blob/master/FinalProject/PRRI-2017-American-Values-Survey.sav?raw=true')
avs <- read_sav(spss_file)
kable(head(avs, n = 15L), align = rep('c', 5)) %>%
kable_styling(bootstrap_options = c("striped", "responsive", "condensed"), full_width = FALSE) %>%
kableExtra::scroll_box(width = "100%", height = "500px")
library(dplyr)
Trump_sub<- election_data[,c(2,5,6,7)]
Trump_sub$total16 <- Trump_sub$trump16 + Trump_sub$clinton16 + Trump_sub$otherpres16
Trump_map <- Trump_sub %>% group_by(state) %>% summarise_all(sum)
Trump_map$trump_per <- Trump_map$trump16/Trump_map$total16
library(tidyverse)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rgeos)
library(maps)
library(RColorBrewer)
library(tools)
world <- ne_countries(scale = "medium", returnclass = "sf")
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
states$ID <- toTitleCase(states$ID)
USA_votes <- Trump_map[which(Trump_map$state != "Alaska" & Trump_map$state != "Hawaii"),]
states$trump_per <- USA_votes$trump_per
for(i in 1:length(states$trump_per)){
if(states$trump_per[i]-0.5>0.05){
states$color[i] <- "1 - Greater than 55% voted for Trump"
}
if(states$trump_per[i]-0.5< 0.05 & states$trump_per[i]- 0.5 >0){
states$color[i] <- "2 - Between 50% and 55% voted for Trump"
}
if(states$trump_per[i]-0.5> (-0.05) & states$trump_per[i]-0.5<0){
states$color[i] <- "3 - Between 45 and 50% voted for Trump"
}
if(states$trump_per[i]-0.5< (-0.05)){
states$color[i] <- "4 - Less than 45% voted for Trump"
}
}
ggplot(data = states) +
ggtitle("Percentage of Trump Votes Delta from 50%") +
geom_sf(aes(fill = states$trump_per-0.5)) +
scale_fill_distiller(palette ="RdBu", limits = c(-0.5,0.5)) +
labs(fill = "Percentage") +
coord_sf(xlim = c(-125,-65), ylim = c(25,50), expand = FALSE) +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "right",
legend.direction = "vertical",
legend.justification = "center",
axis.text.x = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
mycols <- c("#CF0F0F", "#CF9594", "#95A7C2", "#30659B")
ggplot(data = states) +
ggtitle("2016 Election - Percentage of Votes for Trump By State") +
geom_sf(aes(fill = states$color)) +
scale_fill_manual(values = mycols) +
coord_sf(xlim = c(-125,-65), ylim = c(25,50), expand = FALSE) +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "vertical",
legend.justification = "center",
legend.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
question_list <- c("q17a", "q17b", "q17c", "q17d", "q17e", "q17f", "q17g", "q17h")
df_list <- c("Temp_df_a", "Temp_df_b", "Temp_df_c", "Temp_df_d", "Temp_df_e", "Temp_df_f", "Temp_df_g", "Temp_df_h")
q_num <- c(90,92,91,93,94,95,96,97)
for(i in 1:length(q_num)){
assign(df_list[i], avs[which(avs[[paste(question_list[i])]]< 5), c(4, q_num[i])])
}
# Temp_df_a<- avs[which(avs$q17a <5),c(4,90)]
# Temp_df_b<- avs[which(avs$q17b <5),c(4,92)]
# Temp_df_c<- avs[which(avs$q17c <5),c(4,91)]
# Temp_df_d<- avs[which(avs$q17d <5),c(4,93)]
# Temp_df_e<- avs[which(avs$q17e <5),c(4,94)]
# Temp_df_f<- avs[which(avs$q17f <5),c(4,95)]
# Temp_df_g<- avs[which(avs$q17g <5),c(4,96)]
# Temp_df_h<- avs[which(avs$q17h <5),c(4,97)]
df_state_list <- c("state_q17a", "state_q17b", "state_q17c", "state_q17d", "state_q17e", "state_q17f", "state_q17g", "state_q17h")
dfs <- list(Temp_df_a, Temp_df_b, Temp_df_c, Temp_df_d, Temp_df_e, Temp_df_f, Temp_df_g, Temp_df_h)
grouped_data <- lapply(dfs, function(x){ x %>% group_by(state) %>% summarise_all(mean)})
for(i in 1:length(grouped_data)){
assign(df_state_list[i], as.data.frame(grouped_data[[i]]))
}
# state_q17a <- Temp_df_a %>% group_by(state) %>% summarise_all(mean)
# state_q17b <- Temp_df_b %>% group_by(state) %>% summarise_all(mean)
# state_q17c <- Temp_df_c %>% group_by(state) %>% summarise_all(mean)
# state_q17d <- Temp_df_d %>% group_by(state) %>% summarise_all(mean)
# state_q17e <- Temp_df_e %>% group_by(state) %>% summarise_all(mean)
# state_q17f <- Temp_df_f %>% group_by(state) %>% summarise_all(mean)
# state_q17g <- Temp_df_g %>% group_by(state) %>% summarise_all(mean)
# state_q17h <- Temp_df_h %>% group_by(state) %>% summarise_all(mean)
library(openintro)
q17_df <- Reduce(function(x, y) merge(x, y, all=TRUE), list(state_q17a, state_q17b, state_q17c, state_q17d, state_q17e, state_q17f, state_q17g, state_q17h))
q17_df <- q17_df[which(q17_df$state != "HI" & q17_df$state != "AK"),]
q17_df$state <- abbr2state(q17_df$state)
names(q17_df) <- c("ID", "q17a", "q17b", "q17c", "q17d", "q17e", "q17f", "q17g", "q17h")
states <- merge(states,q17_df,by="ID")
state_map <- ggplot(data = states) +
theme(
plot.title = element_text(hjust = 0.5)
)
state_map +
ggtitle("Allowing gay and lesbian couples to marry legally") +
geom_sf(aes(fill = -(states$q17a-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Allow business owner to refuse products/services to gay/lesbian people") +
geom_sf(aes(fill = -(states$q17b-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Laws protecting LGBTQ in jobs, housing, etc.") +
geom_sf(aes(fill = -(states$q17c-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Build the Wall") +
geom_sf(aes(fill = -(states$q17d-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Muslim Ban") +
geom_sf(aes(fill = -(states$q17e-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("DACA through army or college") +
geom_sf(aes(fill = -(states$q17f-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Prevent refugees from entering USA") +
geom_sf(aes(fill = -(states$q17g-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Withdraw from Iran nuclear deal") +
geom_sf(aes(fill = -(states$q17h-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
# Temp_df_a<- avs[which(avs$q17a < 5),c(4,104)]
# Temp_df_b<- avs[which(avs$q17b < 5),c(4,105)]
# Temp_df_c<- avs[which(avs$q17c < 5),c(4,106)]
# Temp_df_d<- avs[which(avs$q17d < 5),c(4,107)]
# Temp_df_e<- avs[which(avs$q17e < 5),c(4,108)]
# Temp_df_f<- avs[which(avs$q17f < 5),c(4,109)]
# Temp_df_g<- avs[which(avs$q17g < 5),c(4,110)]
# Temp_df <- avs[which(avs$q24 < 3),c(4,112)]
# Temp_df2 <- avs[which(avs$q25 < 3),c(4,114)]
df_list_2 <- c("Temp_df_i", "Temp_df_j", "Temp_df_k", "Temp_df_l", "Temp_df_m", "Temp_df_n", "Temp_df_o")
q_num <- c(104,105,106,107,108,109,110)
for(i in 1:length(q_num)){
assign(df_list_2[i], avs[which(avs[[paste(question_list[i])]]< 5), c(4, q_num[i])])
}
question_list <- c("q24", "q25")
df_list_3 <- c("Temp_df_p", "Temp_df_q")
q_num <- c(112,114)
for(i in 1:length(q_num)){
assign(df_list_3[i], avs[which(avs[[paste(question_list[i])]]< 3), c(4, q_num[i])])
}
df_state_list <- c("state_q22a", "state_q22b", "state_q22c", "state_q22d", "state_q22e", "state_q22f", "state_q22g", "state_q24", "state_q25")
dfs <- list(Temp_df_i, Temp_df_j, Temp_df_k, Temp_df_l, Temp_df_m, Temp_df_n, Temp_df_o, Temp_df_p, Temp_df_q)
grouped_data <- lapply(dfs, function(x){ x %>% group_by(state) %>% summarise_all(mean)})
for(i in 1:length(grouped_data)){
assign(df_state_list[i], as.data.frame(grouped_data[[i]]))
}
# state_q22a <- Temp_df_a %>% group_by(state) %>% summarise_all(mean)
# state_q22b <- Temp_df_b %>% group_by(state) %>% summarise_all(mean)
# state_q22c <- Temp_df_c %>% group_by(state) %>% summarise_all(mean)
# state_q22d <- Temp_df_d %>% group_by(state) %>% summarise_all(mean)
# state_q22e <- Temp_df_e %>% group_by(state) %>% summarise_all(mean)
# state_q22f <- Temp_df_f %>% group_by(state) %>% summarise_all(mean)
# state_q22g <- Temp_df_g %>% group_by(state) %>% summarise_all(mean)
# state_q24 <- Temp_df %>% group_by(state) %>% summarise_all(mean)
# state_q25 <- Temp_df2 %>% group_by(state) %>% summarise_all(mean)
library(openintro)
q22_df <- Reduce(function(x, y) merge(x, y, all=TRUE), list(state_q22a, state_q22b, state_q22c, state_q22d, state_q22e, state_q22f, state_q22g, state_q24, state_q25))
q22_df <- q22_df[which(q22_df$state != "HI" & q22_df$state != "AK"),]
q22_df$state <- abbr2state(q22_df$state)
names(q22_df) <- c("ID", "q22a", "q22b", "q22c", "q22d", "q22e", "q22f", "q22g", "q24", "q25")
states <- merge(states,q22_df,by="ID")
state_map +
ggtitle("The severity of recent natural\ndisasters is evidence of climate change\n") +
geom_sf(aes(fill = -(states$q22a-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Because things have gotten so far off track in this country,\nwe need a leader who is willing to break some rules\nif that’s what it takes to set things right") +
geom_sf(aes(fill = -(states$q22b-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("In the past, America’s leaders have been too focused \n on helping other nations at the expense of our own country\n") +
geom_sf(aes(fill = -(states$q22c-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle(" It bothers me when I come in contact with\nimmigrants who speak little or no English\n") +
geom_sf(aes(fill = -(states$q22d-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("\nAmerica today sets a good moral example for the world\n") +
geom_sf(aes(fill = -(states$q22e-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("Professional athletes should be required to stand\nduring the national anthem at sporting events\n") +
geom_sf(aes(fill = -(states$q22f-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
ggtitle("The government should guarantee health insurance\nfor all citizens, even if it means raising taxes\n") +
geom_sf(aes(fill = -(states$q22g-2.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-1.5,1.5))
state_map +
geom_sf(aes(fill = -(states$q24-1.5))) +
labs(fill = "Support") +
scale_fill_gradient2(limits = c(-0.5,0.5))
elec_regr1 <- lm(trump_per ~  q17c + q17d + q17h , data = states)
summary(elec_regr1)
ggplot(data = states) +
ggtitle("Percentage of Trump Votes Delta from 50%") +
geom_sf(aes(fill = states$trump_per-0.5)) +
scale_fill_distiller(palette ="RdBu", limits = c(-0.25,0.25)) +
labs(fill = "Percentage") +
coord_sf(xlim = c(-125,-65), ylim = c(25,50), expand = FALSE) +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "right",
legend.direction = "vertical",
legend.justification = "center",
axis.text.x = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
ggplot(data = states) +
ggtitle("Percentage of Trump Votes Delta from 50%") +
geom_sf(aes(fill = states$trump_per-0.5)) +
scale_fill_distiller(palette ="RdBu", limits = c(-0.5,0.5)) +
labs(fill = "Percentage") +
coord_sf(xlim = c(-125,-65), ylim = c(25,50), expand = FALSE) +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "right",
legend.direction = "vertical",
legend.justification = "center",
axis.text.x = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
View(states)
elec_regr5 <- lm(trump_per ~ q17a + q17d + q17e + q17h + q22a + q22c + q22f + q22g + q24 + q25)
elec_regr5 <- lm(trump_per ~ q17a + q17d + q17e + q17h + q22a + q22c + q22f + q22g + q24 + q25, data = states)
elec_regr5 <- lm(trump_per ~ q17a + q17d + q17e + q17h + q22a + q22c + q22f + q22g + q24 + q25, data = states)
summary(elec_regr5)
elec_regr5 <- lm(trump_per ~ q17a + q17d + q17e + q17h + q22a + q22c + q22g + q24 + q25, data = states)
summary(elec_regr5)
elec_regr5 <- lm(trump_per ~ q17d + q17e + q17h + q22a + q22c + q22f + q22g + q24 + q25, data = states)
summary(elec_regr5)
elec_regr5 <- lm(trump_per ~ q17e + q17h + q22a + q22c + q22f + q22g + q24 + q25, data = states)
summary(elec_regr5)
elec_regr5 <- lm(trump_per ~ q17e + q17f + q17h + q22a + q22c + q22f + q22g + q24 + q25, data = states)
step(elec_regr5, direction = "backward", trace = TRUE)
# summary(elec_regr5)
elec_regr5 <- lm(trump_per ~ q17e + q24 + q25, data = states)
# step(elec_regr5, direction = "backward", trace = TRUE)
summary(elec_regr5)
View(states)
elec_regr5 <- lm(trump_per ~ q17a + q17b + q17c + q17d + q17e + q17f + q17g + q17h + q22a + q22b + q22c + q22d + q22e + q22f + q22g + q24 + q25, data = states)
step(elec_regr5, direction = "backward", trace = FALSE)
# summary(elec_regr5)
fnl_model <- lm(trump_per ~ q17c + q17d + q17e + q24 +q25)
fnl_model <- lm(trump_per ~ q17c + q17d + q17e + q24 + q25, data = states)
summary(fnl_model)
elec_regr2 <- lm(trump_per ~  q17c + q17d + q22d + q24 , data = states)
summary(elec_regr2)
elec_regr3 <- lm(trump_per ~  q17a + q17b + q17c + q17d + q17e + q17f + q17g + q17h +q22a + q22b + q22c + q22d + q22e + q22f + q24 , data = states)
summary(elec_regr3)
elec_regr4 <- lm(trump_per ~  q17c + q17d + q17e + q17f + q17h + q24 + q25 , data = states)
summary(elec_regr4)
prop.table(avs$q6a)
View(avs)
View(avs)
prop.table(avs$q4)
prop.table(avs$q1)
prop.table(avs$income)
prop.table(avs$ideorot)
prop.table(avs$l1)
prop.table(avs$relig)
fnl_model <- lm(trump_per ~ q17c + q17d + q24 + q6b + q6c + q6d + q6e, data = states)
?foreach()
prop.table(avs$q1)
prop.table(avs$q17a)
prop.table(avs$q1)
